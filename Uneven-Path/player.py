from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import get_db_connection
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def handle_start(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start: —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–µ—Ä–Ω—É–≤—à–µ–≥–æ—Å—è."""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name
    conn = get_db_connection()
    c = conn.cursor()
    c.execute('SELECT * FROM players WHERE user_id = ?', (user_id,))
    if not c.fetchone():
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        c.execute('INSERT INTO players (user_id, username, health, damage, defense, gold) VALUES (?, ?, ?, ?, ?, ?)',
                  (user_id, username, 100, 10, 5, 50))
        conn.commit()
        await message.answer(
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}! –¢—ã —Ç–µ–ø–µ—Ä—å –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
            reply_markup=get_main_keyboard()
        )
    else:
        await message.answer(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}! –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º? –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.",
            reply_markup=get_main_keyboard()
        )
    conn.close()

async def handle_profile(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /profile: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞."""
    user_id = message.from_user.id
    conn = get_db_connection()
    c = conn.cursor()
    c.execute('SELECT username, health, damage, defense, gold FROM players WHERE user_id = ?', (user_id,))
    player = c.fetchone()
    if player:
        username, health, damage, defense, gold = player
        profile_text = (
            f"üßô‚Äç‚ôÇÔ∏è *{username}*\n"
            f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {health}\n"
            f"‚öîÔ∏è –£—Ä–æ–Ω: {damage}\n"
            f"üõ°Ô∏è –ó–∞—â–∏—Ç–∞: {defense}\n"
            f"üí∞ –ó–æ–ª–æ—Ç–æ: {gold}"
        )
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", callback_data="open_inventory")]
        ])
        await message.answer(
            profile_text,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
        logger.info(f"–ü–æ–∫–∞–∑–∞–ª –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    else:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.", reply_markup=get_main_keyboard())
    conn.close()

from main import get_main_keyboard