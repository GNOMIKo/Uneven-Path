from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import get_db_connection
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def handle_shop(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /shop: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ."""
    user_id = message.from_user.id
    conn = get_db_connection()
    c = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã shop
    c.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='shop'")
    if not c.fetchone():
        logger.error("–¢–∞–±–ª–∏—Ü–∞ shop –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        await message.answer("–û—à–∏–±–∫–∞: –º–∞–≥–∞–∑–∏–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", reply_markup=None)
        conn.close()
        return
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
    c.execute('SELECT item_id, item_name, item_type, item_value, price FROM shop')
    items = c.fetchall()
    logger.debug(f"–¢–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ: {[(item['item_id'], item['item_name'], item['item_type'], item['item_value'], item['price']) for item in items]}")
    
    if not items:
        await message.answer("–ú–∞–≥–∞–∑–∏–Ω –ø—É—Å—Ç!", reply_markup=None)
        conn.close()
        return
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞
    c.execute('SELECT gold FROM players WHERE user_id = ?', (user_id,))
    player = c.fetchone()
    if not player:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.", reply_markup=None)
        conn.close()
        return
    gold = player['gold']
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for item in items:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"{item['item_name']} (+{item['item_value']}) - {item['price']} –∑–æ–ª–æ—Ç–∞",
                callback_data=f"buy_{item['item_id']}"
            )
        ])
    
    await message.answer(f"üè™ *–ú–∞–≥–∞–∑–∏–Ω*\n–í–∞—à–µ –∑–æ–ª–æ—Ç–æ: {gold}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏:", reply_markup=keyboard, parse_mode='Markdown')
    logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞—é –º–∞–≥–∞–∑–∏–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {len(items)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
    conn.close()

async def handle_buy(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–∫—É–ø–∫—É –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞."""
    user_id = callback.from_user.id
    item_id = int(callback.data.split('_')[1])
    conn = get_db_connection()
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ
    c.execute('SELECT item_name, item_type, item_value, price FROM shop WHERE item_id = ?', (item_id,))
    item = c.fetchone()
    if not item:
        await callback.message.edit_text("–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=None)
        logger.error(f"–ü—Ä–µ–¥–º–µ—Ç —Å ID {item_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        conn.close()
        await callback.answer()
        return
    item_name, item_type, item_value, price = item
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞
    c.execute('SELECT gold FROM players WHERE user_id = ?', (user_id,))
    player = c.fetchone()
    if not player:
        await callback.message.edit_text("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.", reply_markup=None)
        conn.close()
        await callback.answer()
        return
    gold = player['gold']
    
    if gold < price:
        await callback.message.edit_text(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞! –ù—É–∂–Ω–æ: {price}, —É –≤–∞—Å: {gold}.", reply_markup=None)
        logger.info(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ {item_name}: {gold} < {price}")
        conn.close()
        await callback.answer()
        return
    
    # –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
    c.execute('UPDATE players SET gold = gold - ? WHERE user_id = ?', (price, user_id))
    c.execute('INSERT INTO inventory (user_id, item_name, item_type, item_value) VALUES (?, ?, ?, ?)',
              (user_id, item_name, item_type, item_value))
    conn.commit()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    c.execute('SELECT id, item_name, item_type, item_value FROM inventory WHERE user_id = ? AND item_name = ?',
              (user_id, item_name))
    added_item = c.fetchone()
    logger.debug(f"–î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {added_item['id'], added_item['item_name'], added_item['item_type'], added_item['item_value']}")
    
    await callback.message.edit_text(f"–í—ã –∫—É–ø–∏–ª–∏ {item_name} –∑–∞ {price} –∑–æ–ª–æ—Ç–∞!", reply_markup=None)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∫—É–ø–∏–ª {item_name} –∑–∞ {price} –∑–æ–ª–æ—Ç–∞")
    conn.close()
    await callback.answer()