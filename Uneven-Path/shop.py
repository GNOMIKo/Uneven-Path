from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import get_db_connection
from utils import get_main_keyboard
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def handle_shop(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /shop: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏."""
    user_id = message.from_user.id
    conn = get_db_connection()
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞
    c.execute('SELECT gold FROM players WHERE user_id = ?', (user_id,))
    player = c.fetchone()
    if not player:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.", reply_markup=get_main_keyboard())
        conn.close()
        return
    player_gold = player[0]
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
    c.execute('SELECT item_id, item_name, item_type, item_value, price FROM shop')
    items = c.fetchall()
    
    if not items:
        await message.answer("üè™ –ú–∞–≥–∞–∑–∏–Ω –ø—É—Å—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=get_main_keyboard())
        conn.close()
        return
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∑–æ–ª–æ—Ç–æ–º –∏–≥—Ä–æ–∫–∞
    shop_text = f"üè™ *–ú–∞–≥–∞–∑–∏–Ω* (üí∞ –í–∞—à–µ –∑–æ–ª–æ—Ç–æ: {player_gold})\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏:\n"
    for item in items:
        item_id, item_name, item_type, item_value, price = item
        shop_text += f"- {item_name} ({item_type}, +{item_value}, {price} –∑–æ–ª–æ—Ç–∞)\n"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for item in items:
        item_id, item_name, item_type, item_value, price = item
        keyboard.inline_keyboard.append([InlineKeyboardButton(text=f"–ö—É–ø–∏—Ç—å {item_name} ({price} –∑–æ–ª–æ—Ç–∞)", callback_data=f"buy_{item_id}")])
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞—é –º–∞–≥–∞–∑–∏–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {len(items)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
    
    await message.answer(shop_text, reply_markup=keyboard, parse_mode='Markdown')
    conn.close()

async def handle_buy_item(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–∫—É–ø–∫—É –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞."""
    user_id = callback.from_user.id
    item_id = int(callback.data.split('_')[1])
    conn = get_db_connection()
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞
    c.execute('SELECT gold FROM players WHERE user_id = ?', (user_id,))
    player_gold = c.fetchone()
    if not player_gold:
        await callback.message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.", reply_markup=get_main_keyboard())
        conn.close()
        await callback.answer()
        return
    player_gold = player_gold[0]
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–º–µ—Ç–µ
    c.execute('SELECT item_name, item_type, item_value, price FROM shop WHERE item_id = ?', (item_id,))
    item = c.fetchone()
    if item:
        item_name, item_type, item_value, price = item
        if player_gold >= price:
            # –í—ã—á–∏—Ç–∞–µ–º –∑–æ–ª–æ—Ç–æ
            c.execute('UPDATE players SET gold = gold - ? WHERE user_id = ?', (price, user_id))
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
            c.execute('INSERT INTO inventory (user_id, item_name, item_type, item_value) VALUES (?, ?, ?, ?)',
                      (user_id, item_name, item_type, item_value))
            conn.commit()
            await callback.message.answer(f"–í—ã –∫—É–ø–∏–ª–∏ {item_name} –∑–∞ {price} –∑–æ–ª–æ—Ç–∞!")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∫—É–ø–∏–ª {item_name} –∑–∞ {price} –∑–æ–ª–æ—Ç–∞")
        else:
            await callback.message.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!")
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—ã—Ç–∞–ª—Å—è –∫—É–ø–∏—Ç—å {item_name}, –Ω–æ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ –∑–æ–ª–æ—Ç–∞")
    else:
        await callback.message.answer("–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        logger.error(f"–ü—Ä–µ–¥–º–µ—Ç —Å ID {item_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    conn.close()
    await callback.answer()