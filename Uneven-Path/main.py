import asyncio
from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config import API_TOKEN
from player import handle_start, handle_profile
from combat import handle_fight, handle_fight_action
from inventory import handle_inventory, handle_use_item, handle_inventory_page
from shop import handle_shop, handle_buy
from feedback import handle_feedback, process_feedback, FeedbackStates
from database import init_db
from utils import get_main_keyboard
import logging
import aiogram

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ aiogram
logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è aiogram: {aiogram.__version__}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot=bot)  # –ü–µ—Ä–µ–¥–∞—ë–º bot –≤ Dispatcher

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def handle_help(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."""
    help_text = (
        "üìú *–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:*\n"
        "üë§ *–ü—Ä–æ—Ñ–∏–ª—å* - –ü–æ–∫–∞–∑–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
        "üéí *–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å* - –ü–æ–∫–∞–∑–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã\n"
        "üè™ *–ú–∞–≥–∞–∑–∏–Ω* - –ö—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã\n"
        "‚öîÔ∏è *–ë–æ–π* - –°—Ä–∞–∑–∏—Ç—å—Å—è —Å –≤—Ä–∞–≥–æ–º\n"
        "üìù *Feedback* - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n"
        "‚ùì *–ü–æ–º–æ—â—å* - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    await message.answer(help_text, parse_mode='Markdown', reply_markup=get_main_keyboard())

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ callback'–æ–≤."""
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.message.register(handle_start, Command('start'))
    dp.message.register(handle_profile, Command('profile'))
    dp.message.register(handle_profile, F.text == "–ü—Ä–æ—Ñ–∏–ª—å")
    dp.message.register(handle_inventory, Command('inventory'))
    dp.message.register(handle_inventory, F.text == "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
    dp.message.register(handle_shop, Command('shop'))
    dp.message.register(handle_shop, F.text == "–ú–∞–≥–∞–∑–∏–Ω")
    dp.message.register(handle_fight, Command('fight'))
    dp.message.register(handle_fight, F.text == "–ë–æ–π")
    dp.message.register(handle_help, Command('help'))
    dp.message.register(handle_help, F.text == "–ü–æ–º–æ—â—å")
    dp.message.register(handle_feedback, Command('feedback'))
    dp.message.register(handle_feedback, F.text == "Feedback")
    dp.message.register(process_feedback, FeedbackStates.waiting_for_feedback)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤ –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    dp.callback_query.register(handle_fight_action, F.data.startswith('fight_'))
    dp.callback_query.register(handle_buy, F.data.startswith('buy_'))
    dp.callback_query.register(handle_use_item, F.data.startswith('use_item_'))
    dp.callback_query.register(handle_inventory_page, F.data.startswith('inv_page_'))
    dp.callback_query.register(handle_profile, F.data == 'refresh_profile')
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    logger.info("–í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ callback'–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

@dp.update()
async def log_update(update: types.Update):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {update}")
    return False

async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    register_handlers()
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())