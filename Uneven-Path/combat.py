from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import get_db_connection
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def handle_fight(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /fight: –Ω–∞—á–∏–Ω–∞–µ—Ç –±–æ–π —Å –≤—Ä–∞–≥–æ–º."""
    user_id = message.from_user.id
    conn = get_db_connection()
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞
    c.execute('SELECT health, damage, defense FROM players WHERE user_id = ?', (user_id,))
    player = c.fetchone()
    if not player:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.")
        conn.close()
        return
    player_health, player_damage, player_defense = player
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤—Ä–∞–≥–∞ (–ì–æ–±–ª–∏–Ω –¥–ª—è MVP)
    c.execute('SELECT name, health, damage, defense FROM enemies WHERE enemy_id = ?', (1,))
    enemy = c.fetchone()
    if not enemy:
        await message.answer("–í—Ä–∞–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        conn.close()
        return
    enemy_name, enemy_health, enemy_damage, enemy_defense = enemy

    # –†–∞—Å—á—ë—Ç —É—Ä–æ–Ω–∞
    damage_to_enemy = max(1, player_damage - enemy_defense)
    damage_to_player = max(1, enemy_damage - player_defense)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –±–æ—è
    fight_text = (
        f"‚öîÔ∏è *–í—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å {enemy_name}!*\n"
        f"HP –≤—Ä–∞–≥–∞: {enemy_health}\n"
        f"–í–∞—à HP: {player_health}\n"
        f"–ß—Ç–æ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å?"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ê—Ç–∞–∫–æ–≤–∞—Ç—å", callback_data=f"fight_attack_{enemy_health}_{damage_to_enemy}_{damage_to_player}")],
        [InlineKeyboardButton(text="–°–±–µ–∂–∞—Ç—å", callback_data="fight_flee")]
    ])
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info(f"–ù–∞—á–∞–ª–æ –±–æ—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—Ä–æ—Ç–∏–≤ {enemy_name}")
    
    await message.answer(fight_text, reply_markup=keyboard, parse_mode='Markdown')
    conn.close()

async def handle_fight_action(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤ –±–æ—é (–∞—Ç–∞–∫–∞ –∏–ª–∏ –ø–æ–±–µ–≥)."""
    user_id = callback.from_user.id
    action = callback.data.split('_')[1]
    conn = get_db_connection()
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏–≥—Ä–æ–∫–∞
    c.execute('SELECT health FROM players WHERE user_id = ?', (user_id,))
    player_health = c.fetchone()
    if not player_health:
        await callback.message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.")
        conn.close()
        await callback.answer()
        return
    player_health = player_health[0]

    if action == 'flee':
        await callback.message.answer("–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å —Å–±–µ–∂–∞—Ç—å... –£—Å–ø–µ—Ö!")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–±–µ–∂–∞–ª –∏–∑ –±–æ—è")
        conn.close()
        await callback.answer()
        return

    # –î–µ–π—Å—Ç–≤–∏–µ –∞—Ç–∞–∫–∏
    enemy_health = int(callback.data.split('_')[2])
    damage_to_enemy = int(callback.data.split('_')[3])
    damage_to_player = int(callback.data.split('_')[4])

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è
    enemy_health -= damage_to_enemy
    player_health -= damage_to_player

    if enemy_health <= 0:
        # –ü–æ–±–µ–¥–∞ –∏–≥—Ä–æ–∫–∞
        c.execute('UPDATE players SET gold = gold + 20 WHERE user_id = ?', (user_id,))
        c.execute('UPDATE players SET health = ? WHERE user_id = ?', (player_health, user_id))
        conn.commit()
        await callback.message.answer("üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –ì–æ–±–ª–∏–Ω–∞! +20 –∑–æ–ª–æ—Ç–∞")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–±–µ–¥–∏–ª –ì–æ–±–ª–∏–Ω–∞")
        conn.close()
        await callback.answer()
        return

    if player_health <= 0:
        # –ü–æ—Ä–∞–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
        c.execute('UPDATE players SET health = 50 WHERE user_id = ?', (user_id,))
        conn.commit()
        await callback.message.answer("üíÄ –í—ã –ø–æ–±–µ–∂–¥–µ–Ω—ã! –ó–¥–æ—Ä–æ–≤—å–µ —Å–±—Ä–æ—à–µ–Ω–æ –¥–æ 50.")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–æ–∏–≥—Ä–∞–ª –±–æ–π")
        conn.close()
        await callback.answer()
        return

    # –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –±–æ—è
    c.execute('UPDATE players SET health = ? WHERE user_id = ?', (player_health, user_id))
    conn.commit()
    fight_text = (
        f"‚öîÔ∏è –í—ã –Ω–∞–Ω–µ—Å–ª–∏ {damage_to_enemy} —É—Ä–æ–Ω–∞ –ì–æ–±–ª–∏–Ω—É!\n"
        f"–ì–æ–±–ª–∏–Ω –Ω–∞–Ω—ë—Å –≤–∞–º {damage_to_player} —É—Ä–æ–Ω–∞!\n"
        f"HP –≤—Ä–∞–≥–∞: {enemy_health}\n"
        f"–í–∞—à HP: {player_health}\n"
        f"–ß—Ç–æ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å?"
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ê—Ç–∞–∫–æ–≤–∞—Ç—å", callback_data=f"fight_attack_{enemy_health}_{damage_to_enemy}_{damage_to_player}")],
        [InlineKeyboardButton(text="–°–±–µ–∂–∞—Ç—å", callback_data="fight_flee")]
    ])
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info(f"–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –±–æ—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: HP –≤—Ä–∞–≥–∞ {enemy_health}, HP –∏–≥—Ä–æ–∫–∞ {player_health}")
    
    await callback.message.edit_text(fight_text, reply_markup=keyboard, parse_mode='Markdown')
    conn.close()
    await callback.answer()